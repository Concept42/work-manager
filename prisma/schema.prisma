// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin", "darwin-arm64"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Customer {
  id          String      @id @default(cuid()) 
  firstName   String
  lastName    String
  companyName String
  email       String
  adress      String
  city        String
  oib         Int
  phoneNumber Int
  workOrders  WorkOrder[]
  @@unique (id)
}

model WorkOrder {
  id          String    @id @default(cuid()) 
  createdAt   DateTime?  
  updatedAt   DateTime?
  title       String
  discription String
  statusFlag  String
  customer    Customer? @relation(fields: [customerId], references: [id])
  customerId  String?
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
  @@unique (id)
}

model User {
  id            String      @id @default(uuid()) 
  name          String?
  lastName      String?
  email         String      @unique    
  emailVerified DateTime?
  password      String?
  image         String?
  workOrders    WorkOrder[]
  role          String
  accounts      Account[]
  sessions      Session[]
  @@unique (id)
}

model Status {
  id     Int    @id @default(autoincrement()) @unique
  status String
}

model Account {
  id                String  @id @default(cuid()) @unique
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @unique
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
